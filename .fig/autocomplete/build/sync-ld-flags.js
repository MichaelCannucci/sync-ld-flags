var c="https://app.launchdarkly.com",p="405BFF",l="A34FDE",d="FF386B",m="3DD6F5",O=`fig://template?color=${d}&badge=\u{1F3F7}`,o=(e,t)=>{let n=v(e,t);return n>-1?e[n+1]:""},v=(e,t)=>{for(let n of t.name){let s=e.indexOf(n);if(s>-1)return s}return-1},r={projects:{script:e=>{let t=o(e,i);return`curl -s -X GET       ${o(e,a)||c}/api/v2/projects       -H 'Authorization: ${t}'`},postProcess:e=>JSON.parse(e).items.map(n=>({name:n.key,insertValue:n.key,description:n.name,icon:`fig://template?color=${p}&badge=P`}))},environments:{script:e=>{let t=o(e,i),n=o(e,g);return`curl -s -X GET       ${o(e,a)||c}/api/v2/projects/${n}       -H 'Authorization: ${t}'`},postProcess:e=>JSON.parse(e).environments.map(n=>({name:n.key,insertValue:n.key,description:n.name,icon:`fig://template?color=${n.color}&badge=E`}))},flags:{script:e=>{let t=o(e,i),n=o(e,g),s=o(e,u)||o(e,f),h=o(e,a)||c,y=s?`env=${s}`:"";return`curl -s -X GET       ${h}/api/v2/flags/${n}?${y}       -H 'Authorization: ${t}'`},postProcess:e=>JSON.parse(e).items.map(n=>({name:n.key,insertValue:n.key,description:`${n.name} - ${n.description}`,icon:`fig://template?color=${l}&badge=\u2691`}))},flagTags:{script:e=>{let t=o(e,i);return`curl -s -X GET       ${o(e,a)||c}/api/v2/tags?kind=flag       -H 'Authorization: ${t}'`},postProcess:e=>JSON.parse(e).items.map(n=>({name:n,icon:O}))}},g={name:["-p","--project-key"],description:"Project key",icon:`fig://template?color=${p}&badge=P`,priority:800,args:{name:"string",description:"Project key",debounce:!0,generators:r.listProjects}},i={name:["-t","--api-token"],description:"LaunchDarkly personal access token with write-level access.",icon:"fig://icon?type=asterisk",priority:900,args:{name:"string",description:"API access token"}},a={name:["-H","--host"],description:"Hostname override",icon:"fig://template?color=${}badge=\u{1F310}",args:{name:"URI",description:"LaunchDarkly URI"}},u={name:["-s","--source-env"],description:"Source environment",dependsOn:["-p"],icon:`fig://template?color=${m}&badge=E`,priority:700,args:{name:"string",description:"Environment key",debounce:!0,generators:r.listEnvironments}},f={name:["-d","--destination-env"],description:"Destination environment",dependsOn:["-p"],icon:`fig://template?color=${m}&badge=E`,priority:700,args:{name:"string",description:"Environment key",debounce:!0,generators:r.listEnvironments}},k={name:"sync-ld-flags",description:"Copy flag settings from one environment to another.",options:[{name:["-h","--help"],description:"Show help for sync-ld-flags"},g,u,f,i,{name:["-o","--omit-segments"],description:"Omit segments when syncing"},{name:["-f","--flag"],description:"Sync only the specified flag",icon:`fig://template?color=${l}&badge=\u2691`,dependsOn:["-p"],args:{name:"string",description:"Flag key",debounce:!0,generators:r.listFlags}},{name:["-T","--tag"],description:"Sync flags with the specified tag(s). Only flags with all tags will sync.",icon:`fig://template?color=${d}&badge=\u{1F3F7}`,args:{name:"string",description:"Tag name",isVariadic:!0,optionsCanBreakVariadicArg:!0,debounce:!0,generators:r.listFlagTags}},{name:["--dry-run"],description:"Preview changes"},a,{name:["-v","--verbose"],description:"Enable verbose logging"},{name:["-D","--debug"],description:"Enable HTTP debugging"}]},F=k;export{F as default};
//# sourceMappingURL=data:application/json;base64,
